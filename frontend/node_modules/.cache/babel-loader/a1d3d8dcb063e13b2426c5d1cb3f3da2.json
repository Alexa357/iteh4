{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aleks\\\\Desktop\\\\Aleksa projekat\\\\frontend\\\\src\\\\Components\\\\Pages\\\\EditContact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { useParams, useHistory } from \"react-router\";\nimport \"../../styles/Page.css\";\nimport \"../../styles/EditContact.css\";\nimport isEqual from \"lodash.isequal\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { DateTime } from \"luxon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditContact = ({\n  api,\n  setContacts,\n  contacts,\n  stages,\n  cities,\n  companies,\n  setCompanies,\n  setCities,\n  refresh,\n  setRefreshContacts\n}) => {\n  _s();\n\n  const [staff_id, setStaff_id] = useState(localStorage.getItem(\"staff_id\"));\n  const history = useHistory();\n  const [contact, setContact] = useState();\n  const {\n    id\n  } = useParams();\n  const [first_name, setFirstName] = useState();\n  const [last_name, setLastName] = useState();\n  const [title, setTitle] = useState();\n  const [phone, setPhone] = useState();\n  const [email, setEmail] = useState();\n  const [contact_method, setContactMethod] = useState();\n  const [companyId, setCompanyId] = useState();\n  const [company, setCompany] = useState();\n  const [address, setAddress] = useState();\n  const [address2, setAddress2] = useState();\n  const [website_url, setWebsiteUrl] = useState();\n  const [stage_id, setStage] = useState();\n  const [city_id, setCity] = useState();\n  const [deal_size, setDealSize] = useState();\n  const [follow_up_date, setFollowUpDate] = useState();\n  const [notes, setNotes] = useState();\n  let addedUpdatedCompany;\n  const fetchData = useCallback(() => {\n    const apiToken = window.localStorage.getItem(\"api_token\");\n    api.get(`/contacts/detailed/${id}`, {\n      headers: {\n        token: apiToken\n      }\n    }).then(res => {\n      console.log(res);\n\n      if (!isEqual(res.data[0], contact)) {\n        setContact(res.data[0]);\n        fillForm(res.data[0]);\n      }\n    }).catch(error => {\n      console.log(error);\n\n      if (error.response.status === 404) {\n        return alert(\"Lead with this ID doesn't exist\");\n      }\n\n      console.log(error.response.data.message);\n    });\n  }, [api, contact, id]);\n\n  function updateContacts(firstName, lastName, titlE, dealSize, followUpDate, phonE, emaiL, contactMethod, noteS, companyID, stageId) {\n    const apiToken = window.localStorage.getItem(\"api_token\");\n    api.put(`/contacts/${id}`, {\n      first_name: firstName,\n      last_name: lastName,\n      title: titlE,\n      deal_size: dealSize,\n      follow_up_date: followUpDate,\n      phone: phonE,\n      email: emaiL,\n      contact_method: contactMethod,\n      notes: noteS,\n      company_id: companyID,\n      stage_id: stageId\n    }, {\n      headers: {\n        token: apiToken\n      }\n    }).then(res => {\n      console.log(res.data);\n      alert(\"Lead successfully updated\");\n      history.push(\"/Dashboard\");\n      setRefreshContacts(true);\n    }).catch(error => {\n      alert(error.response.data.message);\n    });\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  const fillForm = data => {\n    //console.log(data);\n    setFirstName(data.first_name);\n    setLastName(data.last_name);\n    setTitle(data.title);\n    setPhone(data.phone);\n    setEmail(data.email);\n    setContactMethod(data.contact_method);\n    setCompanyId(data.company_id);\n    setStage(data.stage_id);\n    setDealSize(data.deal_size);\n    setFollowUpDate(data.follow_up_date);\n    setNotes(data.notes);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); //apdejtovanje kontakta\n\n    updateContacts(first_name, last_name, title, deal_size, follow_up_date, phone, email, contact_method, notes, companyId, stage_id);\n  };\n\n  const onDelete = e => {\n    e.preventDefault();\n    const apiToken = window.localStorage.getItem(\"api_token\");\n\n    if (window.confirm(\"Are you sure you want to delete a lead?\")) {\n      api.delete(`contacts/${id}`, {\n        headers: {\n          token: apiToken\n        }\n      }).then(res => {\n        alert(\"Lead deleted\");\n        history.push(\"/Dashboard\");\n        setRefreshContacts(true);\n      }).catch(error => {\n        alert(error.response.data.message);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Edit Lead:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"First name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"first-name\",\n            value: first_name,\n            onChange: e => {\n              setFirstName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Last name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"last-name\",\n            value: last_name,\n            onChange: e => {\n              setLastName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"title\",\n            value: title,\n            onChange: e => {\n              setTitle(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"phone\",\n            value: phone,\n            onChange: e => {\n              setPhone(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"email\",\n            value: email,\n            onChange: e => {\n              setEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Contact method:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            name: \"contact-method\",\n            value: contact_method,\n            onChange: e => {\n              setContactMethod(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select contact method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"phone\",\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Stage:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            name: \"stage\",\n            value: stage_id,\n            onChange: e => {\n              setStage(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a stage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), stages.map(stage => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: stage.id,\n              children: stage.stage\n            }, stage.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Deal size:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"deal-size\",\n            value: deal_size,\n            onChange: e => {\n              setDealSize(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Follow Up Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"date\",\n            name: \"follow-up-date\",\n            value: follow_up_date,\n            onChange: e => {\n              setFollowUpDate(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Company:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            name: \"company\",\n            value: companyId,\n            onChange: e => {\n              setCompanyId(e.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Company\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), companies.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: c.id,\n              children: c.company\n            }, c.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container notes-textarea\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Notes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            name: \"notes\",\n            rows: 10,\n            value: notes,\n            onChange: e => {\n              setNotes(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            onClick: onSubmit,\n            className: \"accept-button\",\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            onClick: onDelete,\n            className: \"delete-button\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditContact, \"hbQLE883oiV4eB1YtUQkOeUgzDA=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = EditContact;\nexport default EditContact;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditContact\");","map":{"version":3,"sources":["C:/Users/aleks/Desktop/Aleksa projekat/frontend/src/Components/Pages/EditContact.js"],"names":["React","useEffect","useState","useCallback","useParams","useHistory","isEqual","Form","Button","DateTime","EditContact","api","setContacts","contacts","stages","cities","companies","setCompanies","setCities","refresh","setRefreshContacts","staff_id","setStaff_id","localStorage","getItem","history","contact","setContact","id","first_name","setFirstName","last_name","setLastName","title","setTitle","phone","setPhone","email","setEmail","contact_method","setContactMethod","companyId","setCompanyId","company","setCompany","address","setAddress","address2","setAddress2","website_url","setWebsiteUrl","stage_id","setStage","city_id","setCity","deal_size","setDealSize","follow_up_date","setFollowUpDate","notes","setNotes","addedUpdatedCompany","fetchData","apiToken","window","get","headers","token","then","res","console","log","data","fillForm","catch","error","response","status","alert","message","updateContacts","firstName","lastName","titlE","dealSize","followUpDate","phonE","emaiL","contactMethod","noteS","companyID","stageId","put","company_id","push","onSubmit","e","preventDefault","onDelete","confirm","delete","target","value","map","stage","c"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport { useParams, useHistory } from \"react-router\";\nimport \"../../styles/Page.css\";\nimport \"../../styles/EditContact.css\";\n\nimport isEqual from \"lodash.isequal\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { DateTime } from \"luxon\";\n\nconst EditContact = ({\n  api,\n  setContacts,\n  contacts,\n  stages,\n  cities,\n  companies,\n  setCompanies,\n  setCities,\n  refresh,\n  setRefreshContacts,\n}) => {\n  const [staff_id, setStaff_id] = useState(localStorage.getItem(\"staff_id\"));\n  const history = useHistory();\n  const [contact, setContact] = useState();\n  const { id } = useParams();\n\n  const [first_name, setFirstName] = useState();\n  const [last_name, setLastName] = useState();\n  const [title, setTitle] = useState();\n  const [phone, setPhone] = useState();\n  const [email, setEmail] = useState();\n  const [contact_method, setContactMethod] = useState();\n\n  const [companyId, setCompanyId] = useState();\n  const [company, setCompany] = useState();\n  const [address, setAddress] = useState();\n  const [address2, setAddress2] = useState();\n  const [website_url, setWebsiteUrl] = useState();\n\n  const [stage_id, setStage] = useState();\n  const [city_id, setCity] = useState();\n  const [deal_size, setDealSize] = useState();\n  const [follow_up_date, setFollowUpDate] = useState();\n  const [notes, setNotes] = useState();\n\n  let addedUpdatedCompany;\n\n  const fetchData = useCallback(() => {\n    const apiToken = window.localStorage.getItem(\"api_token\");\n    api\n      .get(`/contacts/detailed/${id}`, { headers: { token: apiToken } })\n      .then((res) => {\n        console.log(res);\n        if (!isEqual(res.data[0], contact)) {\n          setContact(res.data[0]);\n          fillForm(res.data[0]);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        if (error.response.status === 404) {\n          return alert(\"Lead with this ID doesn't exist\");\n        }\n        console.log(error.response.data.message);\n      });\n  }, [api, contact, id]);\n\n  function updateContacts(\n    firstName,\n    lastName,\n    titlE,\n    dealSize,\n    followUpDate,\n    phonE,\n    emaiL,\n    contactMethod,\n    noteS,\n    companyID,\n    stageId\n  ) {\n    const apiToken = window.localStorage.getItem(\"api_token\");\n    api\n      .put(\n        `/contacts/${id}`,\n        {\n          first_name: firstName,\n          last_name: lastName,\n          title: titlE,\n          deal_size: dealSize,\n          follow_up_date: followUpDate,\n          phone: phonE,\n          email: emaiL,\n          contact_method: contactMethod,\n          notes: noteS,\n          company_id: companyID,\n          stage_id: stageId,\n        },\n        { headers: { token: apiToken } }\n      )\n      .then((res) => {\n        console.log(res.data);\n        alert(\"Lead successfully updated\");\n        history.push(\"/Dashboard\");\n        setRefreshContacts(true);\n      })\n      .catch((error) => {\n        alert(error.response.data.message);\n      });\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  const fillForm = (data) => {\n    //console.log(data);\n    setFirstName(data.first_name);\n    setLastName(data.last_name);\n    setTitle(data.title);\n    setPhone(data.phone);\n    setEmail(data.email);\n    setContactMethod(data.contact_method);\n\n    setCompanyId(data.company_id);\n\n    setStage(data.stage_id);\n    setDealSize(data.deal_size);\n\n    setFollowUpDate(data.follow_up_date);\n    setNotes(data.notes);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    //apdejtovanje kontakta\n    updateContacts(\n      first_name,\n      last_name,\n      title,\n      deal_size,\n      follow_up_date,\n      phone,\n      email,\n      contact_method,\n      notes,\n      companyId,\n      stage_id\n    );\n  };\n\n  const onDelete = (e) => {\n    e.preventDefault();\n    const apiToken = window.localStorage.getItem(\"api_token\");\n    if (window.confirm(\"Are you sure you want to delete a lead?\")) {\n      api\n        .delete(`contacts/${id}`, { headers: { token: apiToken } })\n        .then((res) => {\n          alert(\"Lead deleted\");\n          history.push(\"/Dashboard\");\n          setRefreshContacts(true);\n        })\n        .catch((error) => {\n          alert(error.response.data.message);\n        });\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h5>Edit Lead:</h5>\n      <div className=\"form-container\">\n        <Form>\n          <hr />\n          <div className=\"input-container\">\n            <p>First name:</p>\n            <Form.Control\n              type=\"text\"\n              name=\"first-name\"\n              value={first_name}\n              onChange={(e) => {\n                setFirstName(e.target.value);\n              }}\n            />\n          </div>\n          <div className=\"input-container\">\n            <p>Last name:</p>\n            <Form.Control\n              type=\"text\"\n              name=\"last-name\"\n              value={last_name}\n              onChange={(e) => {\n                setLastName(e.target.value);\n              }}\n            />\n          </div>\n          <div className=\"input-container\">\n            <p>Title:</p>\n            <Form.Control\n              type=\"text\"\n              name=\"title\"\n              value={title}\n              onChange={(e) => {\n                setTitle(e.target.value);\n              }}\n            />\n          </div>\n          <div className=\"input-container\">\n            <p>Phone:</p>\n            <Form.Control\n              type=\"text\"\n              name=\"phone\"\n              value={phone}\n              onChange={(e) => {\n                setPhone(e.target.value);\n              }}\n            />\n          </div>\n          <div className=\"input-container\">\n            <p>Email:</p>\n            <Form.Control\n              type=\"text\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n          </div>\n          <div className=\"input-container\">\n            <p>Contact method:</p>\n            <Form.Control\n              as=\"select\"\n              name=\"contact-method\"\n              value={contact_method}\n              onChange={(e) => {\n                setContactMethod(e.target.value);\n              }}\n            >\n              <option value=\"\">Select contact method</option>\n              <option value=\"phone\">Phone</option>\n              <option value=\"email\">Email</option>\n            </Form.Control>\n          </div>\n\n          <hr />\n          <div className=\"input-container\">\n            <p>Stage:</p>\n            <Form.Control\n              as=\"select\"\n              name=\"stage\"\n              value={stage_id}\n              onChange={(e) => {\n                setStage(e.target.value);\n              }}\n            >\n              <option value=\"\">Select a stage</option>\n              {stages.map((stage) => (\n                <option key={stage.id} value={stage.id}>\n                  {stage.stage}\n                </option>\n              ))}\n            </Form.Control>\n          </div>\n          <div className=\"input-container\">\n            <p>Deal size:</p>\n            <Form.Control\n              type=\"text\"\n              name=\"deal-size\"\n              value={deal_size}\n              onChange={(e) => {\n                setDealSize(e.target.value);\n              }}\n            />\n          </div>\n          <div className=\"input-container\">\n            <p>Follow Up Date:</p>\n            <Form.Control\n              type=\"date\"\n              name=\"follow-up-date\"\n              value={follow_up_date}\n              onChange={(e) => {\n                setFollowUpDate(e.target.value);\n              }}\n            />\n          </div>\n\n          <div className=\"input-container\">\n            <p>Company:</p>\n            <Form.Control\n              as=\"select\"\n              name=\"company\"\n              value={companyId}\n              onChange={(e) => {\n                setCompanyId(e.target.value);\n              }}\n            >\n              <option value=\"\">Select Company</option>\n              {companies.map((c) => (\n                <option key={c.id} value={c.id}>\n                  {c.company}\n                </option>\n              ))}\n            </Form.Control>\n          </div>\n\n          <div className=\"input-container notes-textarea\">\n            <p>Notes:</p>\n            <Form.Control\n              as=\"textarea\"\n              name=\"notes\"\n              rows={10}\n              value={notes}\n              onChange={(e) => {\n                setNotes(e.target.value);\n              }}\n            />\n          </div>\n\n          <div className=\"buttons\">\n            <Button type=\"submit\" onClick={onSubmit} className=\"accept-button\">\n              Accept\n            </Button>\n            <Button type=\"submit\" onClick={onDelete} className=\"delete-button\">\n              Delete\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default EditContact;\n"]},"metadata":{},"sourceType":"module"}